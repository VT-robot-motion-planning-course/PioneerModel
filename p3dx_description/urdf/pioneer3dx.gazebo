<?xml version="1.0"?>

<!-- 
This is the gazebo urdf description of a Pioneer 3DX.
Copyright (C) 2013 Rafael Berkvens rafael.berkvens@uantwerpen.be

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<!-- <robot> -->
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- properties (constants) -->
  <!-- <property name="ns" value="p3dx" /> -->
  <xacro:property name="ns" value="p3dx" />

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${ns}</robotNamespace>
    </plugin>
  </gazebo>

  <!-- base_link -->
	<gazebo reference="base_link">
		<material>Gazebo/Red</material>
	</gazebo>

  <!-- top_plate -->
  <gazebo reference="top_plate">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- swivel -->
  <gazebo reference="swivel">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <!-- center_hubcap -->
	<gazebo reference="center_hubcap">
		<material>Gazebo/Grey</material>
	</gazebo>
  
  <!-- center_wheel -->
	<gazebo reference="center_wheel">
		<material>Gazebo/Black</material>
		<mu1>10.0</mu1>
		<mu2>10.0</mu2>
		<kp>1000000.0</kp>
		<kd>1.0</kd>
	</gazebo>
  
  <!-- front_sonar -->  
  <gazebo reference="front_sonar">
    <material value="Gazebo/Yellow" />
  </gazebo>

  <!-- differential drive -->
	<gazebo>
        <!-- DiffDrive:
        http://docs.ros.org/kinetic/api/gazebo_plugins/html/gazebo__ros__diff__drive_8cpp_source.html
        http://wiki.ros.org/diff_drive_controller-->
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<!-- from 2017-06-20 run:
            [ERROR] [1497990805.840864798, 0.001000000]: GazeboRosDiffDrive Plugin missing <legacyMode>, defaults to true
              This setting assumes you have a old package, where the right and left wheel are changed to fix a former code issue
              To get rid of this error just set <legacyMode> to false if you just created a new package.
              To fix an old package you have to exchange left wheel by the right wheel.
              If you do not want to fix this issue in an old package or your z axis points down instead of the ROS standard defined in REP 103
              just set <legacyMode> to true.
            -->
            <legacyMode>false</legacyMode> <!-- works with newer version of the plugin, ROS kinetic; to align with their fix, swapped the wheels back, see below! :) -->
            <alwaysOn>true</alwaysOn>
            <updateRate>100</updateRate>
            <!-- <leftJoint>base_right_wheel_joint</leftJoint>
            <rightJoint>base_left_wheel_joint</rightJoint> -->
            <!-- <leftJoint>base_link_right_wheel_joint</leftJoint> - for legacyMode=true -->
            <!-- <rightJoint>base_link_left_wheel_joint</rightJoint> - for legacyMode=true -->
			<leftJoint>base_link_left_wheel_joint</leftJoint> <!-- corresponds to fix! -->
			<rightJoint>base_link_right_wheel_joint</rightJoint> <!-- corresponds to fix! -->
			<wheelSeparation>0.39</wheelSeparation>
			<wheelDiameter>0.15</wheelDiameter>
			<!-- <torque>5</torque> old. new is wheelTorque below-->
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>
			<odometryFrame>odom</odometryFrame>
			<robotBaseFrame>base_link</robotBaseFrame>
            <!-- setting defaults for DiffDrive in gazebo below -->
            <rosDebugLevel>na</rosDebugLevel>
            <!-- <tf_prefix></tf_prefix> -->
            <publishWheelTF>false</publishWheelTF>
            <publishWheelJointState>false</publishWheelJointState>
            <wheelAcceleration>0</wheelAcceleration>
            <wheelTorque>5</wheelTorque>
            <odometrySource>world</odometrySource> <!-- added default = 1 (WORLD?, not = 0 ENCODER??) -->
            <publishTf>1</publishTf>
            <!-- /end setting defaults for DiffDrive in gazebo -->
		</plugin>
	</gazebo>

  <!-- ground truth -->
	<gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>100.0</updateRate>
			<bodyName>base_link</bodyName>
			<topicName>${ns}/base_pose_ground_truth</topicName>
			<gaussianNoise>0.01</gaussianNoise>
			<frameName>map</frameName>
			<!-- initialize odometry for fake localization -->
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo>
	
	<!-- lms100 -->
	<gazebo reference="lms100">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>50</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser achieving 
						"+-30mm" accuracy at range < 10m. A mean of 0.0m and stddev of 0.01m will 
						put 99.7% of samples within 0.03m of the true reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>${ns}/laser/scan</topicName>
				<frameName>lms100</frameName>
			</plugin>
		</sensor>
	</gazebo>
  
</robot>
